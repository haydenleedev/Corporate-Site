@use "sass:math";
@import "../../../styles/settings/_mixins.scss";
@import "../../../styles/settings/_colors.scss";
@import "../../../styles/settings/_variables.scss";

.navbar {
  box-shadow: 0 0 10px 0px #00000014;
  height: $navbar-height;
  font-size: 1rem;
  padding-top: 1.25rem;
  position: absolute;
  width: 100%;
  z-index: 4;

  @include desktop() {
    position: relative;
    padding-top: 0;
    display: flex;
  }
  nav {
    background: white;
    display: flex;
    flex-grow: 1;
    flex-wrap: wrap;
    flex-flow: column;
    ul,
    li {
      list-style: none;
    }
    @include desktop() {
      border-bottom: unset;
      flex-flow: row;
      justify-content: space-between;
      align-items: center;
    }
  }
}

.navbarToggle {
  all: unset;
  position: absolute;
  right: 0;
  padding: inherit;
  cursor: pointer;

  @include desktop {
    display: none;
  }
}

.logo {
}

.mainNavigationActive {
}
.mainNavigationHidden {
  display: none;
}

.mainNavigation {
  padding-left: 0;
  margin: 0;
  height: 100%;

  @include desktop() {
    padding-left: 3rem;
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: center;

    // Offset the dropdown menus exponentially because they might overflow to the right
    $n: 10;
    @for $i from 1 through $n {
      & > li:nth-child(#{$i}) {
        & > ul {
          left: math.pow($i, 2) * -0.75rem;
        }
      }
    }
  }

  & > li {
    overflow: hidden;
    @include desktop() {
      overflow: visible;
      position: relative;
    }
  }
  a {
    @include desktop() {
      display: block;
    }
  }
}

.dropdown {
  height: 100%;
  display: flex;
  padding: 1rem 0;
  border-bottom: 0.1rem solid $color-mediumgray;
  flex-flow: column;

  // Set navbar triangle pointer invisbile
  &::before {
    visibility: hidden;
    content: " ";
    opacity: 0;
    // transition: opacity 1.25s;
  }
  @include desktop() {
    flex-flow: row;
    border: none;
    padding-left: 1.5rem;
    align-items: center;
    &:hover {
      &::before {
        visibility: visible;
        opacity: 1;
        position: absolute;
        width: 1rem;
        height: 1rem;
        background: $color-mediumgray;
        content: "";
        bottom: 0.5rem;
        left: 3rem;
        transform: rotate(45deg);
      }
    }
  }
  & > a {
    &:after {
      font-family: "arrow-down";
      content: "\e900";
      color: $color-darkblue;
      font-size: 0.5rem;
      padding: 0.5rem;
      position: absolute;
      right: 0;
      @include desktop() {
        position: relative;
        color: $color-gray;
      }
    }
  }

  & > ul {
    padding: 0;
    padding-top: 0.5rem;

    @include desktop() {
      min-width: 25vw;
      opacity: 0;
      visibility: hidden;
      position: absolute;
      padding: 1.5rem;
      // transition: opacity 0.33s;
      left: 0;
    }

    li {
      padding: 0.5rem 0;
    }
    ul {
      padding-top: 0.5rem;
      li {
        list-style-type: disc;
      }
    }
    // TODO: rework this in dom for z-index
  }
  &:hover > ul {
    display: block;
    @include desktop() {
      top: 4rem;
      visibility: visible;
      opacity: 1;
      position: absolute;
      background: #fff;
      text-align: left;
      @include shadow();
      border: 0.1rem solid $color-mediumgray;
      z-index: 3;
    }
  }
}

.navigationLink {
  position: relative;
  transition: color 0.25s;
  width: 100%;
  &:hover {
    color: $color-lightblue;
  }
}

.navigationColumns {
  // Not sure why but have to override
  display: flex !important;
  flex-flow: column;
  @include desktop() {
    flex-flow: row;
  }

  .navigationColumn {
    padding: 0 3rem 0 0;

    .navigationItem {
      margin-top: 0.75rem;
      padding: 0.5rem 0;

      & > ul {
        padding-bottom: 0;
        & > li {
        }
      }

      &:first-child {
        @include desktop() {
          margin-top: 0;
        }
      }
    }
  }
}

.dropdownActive {
  // color: red;
}

.dropdownClosed {
  display: none !important;
  @include desktop() {
    display: flex !important;
  }
}
