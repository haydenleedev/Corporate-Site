@use "sass:math";
@import "../../../styles/settings/mixins";
@import "../../../styles/settings/colors";
@import "../../../styles/settings/variables";

.navbar {
  transition: box-shadow 0.2s;
  box-shadow: 0 0 0.5rem 0px #00000014;
  height: $navbar-height;
  font-size: 1rem;
  padding-top: 1.25rem;
  width: 100%;
  z-index: 4;
  position: sticky;
  top: 0;
  background: white;
  &.scrolled {
    box-shadow: 0 0 0.5rem 0 #0000005b;
  }

  &.transparent {
    background: transparent;
    box-shadow: unset;
    nav {
      background: transparent;
    }
  }

  @include desktop() {
    padding-top: 0;
    display: flex;
    position: sticky;
    top: 0;
  }

  nav {
    overflow-x: clip;
    background: white;
    display: flex;
    flex-grow: 1;
    flex-wrap: wrap;
    flex-flow: column;
    ul,
    li {
      list-style: none;
    }
    border-bottom: 0.1rem solid $color-mediumgray;
    padding-bottom: 1rem;
    @include desktop() {
      padding-top: 0;
      padding-bottom: 0;
      box-shadow: none;
      border-bottom: none;
      flex-flow: row;
      justify-content: space-between;
      align-items: center;
      position: relative;
    }
  }
}

.brand {
  width: 50%;
  @include desktop() {
    width: initial;
  }
  .logo {
    position: relative;
    // Slight offset here since the logo's typography causes it to look not aligned center
    // TODO: Adjust if you adjust the logo size
    top: 0.3rem;
  }
}

.navbarToggle {
  all: unset;
  position: absolute;
  right: 1rem;
  padding: inherit;
  cursor: pointer;
  padding: 1rem;
  top: 2rem;

  span {
    position: absolute;
    content: "";
    background: $color-navy;
    height: 0.1rem;
    width: 100%;
    left: 0;
    &:nth-child(1) {
      top: 0;
    }
    &:nth-child(2) {
      top: 0.5rem;
    }
    &:nth-child(3) {
      top: 1rem;
    }
  }

  &.active {
    span {
      &:nth-child(1) {
        transform: translateY(0.5rem) rotate(45deg);
      }
      &:nth-child(2) {
        opacity: 0;
      }
      &:nth-child(3) {
        transform: translateY(-0.5rem) rotate(-45deg);
      }
    }
  }

  // Don't display mobile menu toggle on desktop, doesn't affect accessibility
  @include desktop {
    display: none;
  }
}

// Mobile toggle menu states
.mainNavigationActive {
  position: relative;
  padding-top: 3.66rem;
  @include desktop() {
    position: initial;
    padding-top: initial;
  }
}
.mainNavigationHidden {
  // Safari needs this
  height: 0;
  left: -2147483647px;
  padding: 0;
  position: absolute;
  @include desktop() {
    height: initial;
    left: unset;
    padding: initial;
    position: initial;
  }
}

.mainNavigation {
  padding-left: 0;
  margin: 0;
  height: 100%;
  @include desktop() {
    padding-left: 3rem;
    display: flex;
    justify-content: space-between;
    align-items: center;

    & > li:last-child {
      & > ul {
        right: 0;
        margin-left: unset;
      }
    }
  }

  // Nav group item
  & > li {
    overflow: hidden;
    @include desktop() {
      overflow: visible;
      // position: relative;
    }
  }
  a {
    @include desktop() {
      display: block;
    }
  }
}

.noDropdown {
  padding: 1rem 0;
  @include desktop() {
    flex-flow: row;
    border: none;
    padding-left: 1.5rem;
    align-items: center;
  }
}

// Renamed hasDropdown since the dropdown is actually a child ul
.hasDropdown {
  display: flex;
  padding: 1rem 0;
  flex-flow: column;

  @include touch {
    &:not(:last-child) {
      border-bottom: 0.1rem solid $color-mediumgray;
    }

    &:last-child {
      padding-bottom: 0;
    }
  }

  @include desktop() {
    height: 100%;
    flex-flow: row;
    border: none;
    padding-left: 1.5rem;
    align-items: center;
  }

  & > a {
    &:after {
      font-family: "arrow-down";
      content: "\e900";
      color: $color-darkblue;
      font-size: 0.5rem;
      padding: 0.5rem 0 0.5rem 0.5rem;
      position: absolute;
      right: 0;
      @include desktop() {
        position: relative;
        color: $color-gray;
      }
    }
  }
  &.hasDropdownIsActive {
    & > a {
      &:after {
        transform: rotateX(180deg);
      }
    }
  }

  // Mobile toggleable styles
  .dropdownActive {
    left: unset;
    position: relative;
  }

  .dropdownClosed {
    left: -2147483647px;

    @include desktop() {
      // Safari fix
      display: flex;
    }
  }

  // The actual dropdown container

  & > ul {
    position: absolute;
    padding: 0;

    @include desktop() {
      top: 4rem;
      left: -2147483647px;
      padding: 1rem 2rem 1rem 2rem;
      position: absolute;
      background: #fff;
      text-align: left;
      @include shadow();
      border: 0.1rem solid $color-mediumgray;
      z-index: 3;
      margin-left: -2rem;
    }

    li {
      padding: 0.5rem 0;
    }
    ul {
      padding-top: 0.5rem;
      li {
        list-style-type: disc;
      }
    }
  }

  // Triangle
  &:not(.disabled) {
    &:hover {
      @include desktop() {
        &::before {
          position: absolute;
          width: 1rem;
          height: 1rem;
          background: $color-mediumgray;
          content: "";
          transform: rotate(45deg);
          top: 3.5rem;
        }
      }
    }
  }

  // Dropdown trigger on hover
  &:not(.disabled) {
    &:hover > ul {
      @include desktop() {
        left: unset;
      }
    }
  }
}

.navigationLink {
  position: relative;
  transition: color 0.25s;
  width: 100%;
  padding: 0.5rem 0;
  display: inline-block;

  &:hover {
    color: $color-lightblue;
  }
}

.navigationColumns {
  // Not sure why but have to override
  display: flex;
  flex-flow: column;
  @include desktop() {
    flex-flow: row;
    display: flex;
  }

  .navigationColumn {
    padding: 0 3rem 0 0;
    height: 100%;
    .navigationItem {
      padding: 0.625rem 0;

      & > ul {
        padding-bottom: 0;
        & > li {
        }
      }

      &:first-child {
        @include desktop() {
          margin-top: 0;
        }
      }
    }
  }
}

.mainNavigationContainer {
  height: 100vh;
  max-height: 100vh;
  width: 100%;
  position: relative;
  @include desktop () {
    overflow: unset;
    height: unset;
    max-height: unset;
    widows: unset;
    overflow-y: unset;
  }
}

.mainNavigationContainerClosed {
    max-height: unset;
    height: unset;
}

.mainNavigationContainerActive {
  
  overflow-y: scroll;
  @include desktop () {
    overflow-y: unset;
  }
}