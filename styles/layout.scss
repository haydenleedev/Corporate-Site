@import "./settings/__settings";

/*
  <<<<<<<<<<<<<<<<FLEX LAYOUT CLASSES>>>>>>>>>>>>>>>>>
*/
.grid {
  display: flex;
  @include desktop() {
    width: 100%;
    flex-direction: column;
    justify-content: stretch;
  }
  .row {
    width: 100%;
    @include desktop() {
      display: flex;
      flex-wrap: wrap;
      .inner {
        height: 100%;
      }
    }
  }
  .align-center {
    .col {
      align-items: center;
      justify-content: center;
    }
    .row {
      justify-content: center;
    }
  }

  .col {
    position: relative;
    display: flex;
    flex-direction: column;
    padding: 0.625rem 0;
    width: 100%;
    @include desktop() {
      padding: 0.5rem;
    }
    &.col-2 {
      flex: 0 0 auto;
      @include desktop() {
        width: 50%;
      }
    }
    &.col-3 {
      flex: 0 0 auto;
      @include desktop() {
        width: 33.3333333333%;
      }
    }
    &.col-4 {
      flex: 0 0 auto;
      width: 100%;
      @include largeDesktop() {
        width: 25%;
      }
    }
  }
}

.row-desktop {
  display: flex;
  flex-flow: column;

  @include desktop() {
    flex-flow: row;
  }
}
.flex-direction-row-reverse {
  flex-direction: row-reverse;
}

.flex-direction-column {
  flex-direction: column;
}

// only apply on touch screen widths.
.flex-direction-column-touch {
  @include touch() {
    flex-direction: column;
  }
}

// !important needs to be used to make sure that the helper class applies.
.flex-direction-column-reverse {
  flex-direction: column-reverse;
}

.justify-content-center {
  justify-content: center !important;
}
.justify-content-flex-start {
  justify-content: flex-start !important;
}
.justify-content-flex-end {
  justify-content: flex-end !important;
}
.justify-content-space-between {
  justify-content: space-between !important;
}
.justify-self-center {
  justify-self: center !important;
}
.justify-self-start {
  justify-self: flex-start !important;
}
.justify-self-end {
  justify-self: flex-end !important;
}

.align-items-flex-start {
  align-items: flex-start !important;
}
.align-items-flex-end {
  align-items: flex-end !important;
}

.align-items-center,
.align-items-center .grid-columns {
  align-items: center !important;
}
.align-items-unset {
  align-items: unset !important;
}

.align-self-center {
  align-self: center !important;
}
.align-self-end {
  align-self: end !important;
}
.align-self-start {
  align-self: start !important;
}

/*
  <<<<<<<<<<<<<<<<GRID LAYOUT CLASSES>>>>>>>>>>>>>>>>>
*/
.columns {
  width: 100%;
  display: grid;
  grid-gap: 1rem;
  &.auto {
    // Auto fit to container if no repet has been specified
    grid-template-columns: auto auto auto auto;
  }

  @include desktop() {
    &.repeat-3 {
      grid-template-columns: repeat(3, 1fr);
    }

    &.repeat-1 {
      grid-template-columns: repeat(1, 1fr);
    }

    &.repeat-2 {
      grid-template-columns: repeat(2, 1fr);
    }

    &.repeat-4 {
      grid-template-columns: repeat(4, 1fr);
    }
    &.repeat-5 {
      grid-template-columns: repeat(5, 1fr);
    }
    &.repeat-6 {
      grid-template-columns: repeat(6, 1fr);
    }
  }
}

// use for tile layouts i.e. logosList
.grid-columns {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
  justify-content: space-between;

  @include tablet() {
    // When we want to make the items into two differnt rows
    &.row-2 {
      .is-6 {
        // Make them as .is-3 to display them in two rows
        flex: 0 0 calc(33.3333% - 0.5rem);
      }
      .is-7 {
        // Make them as .is-4 to display them in two rows
        flex: 0 0 calc(25% - 0.5rem);
      }
    }
  }

  .grid-column {
    position: relative;
    padding: 0.75rem;
    flex: 0 0 20vh;
    > * {
      width: 100%;
      display: flex;
      justify-content: center;
    }
    @include tablet() {
      // default is six columns
      flex: 0 0 calc(16.6667% - 0.5rem);
      &.is-1 {
        flex-basis: 100%;
      }
      &.is-2 {
        flex: 0 0 calc(50% - 0.5rem);
      }
      &.is-3 {
        flex: 0 0 calc(33.3333% - 0.5rem);
      }
      &.is-4 {
        flex: 0 0 calc(25% - 0.5rem);
      }
      &.is-5 {
        flex: 0 0 calc(20% - 0.5rem);
      }
      &.is-7 {
        flex: 0 0 calc(14.2857% - 0.5rem);
      }
      // we want larger gap in some cases
      &.is-2-larger-gap {
        flex: 0 0 calc(50% - 2rem);
      }
      &.is-3-larger-gap {
        flex: 0 0 calc(33.3333% - 2rem);
      }
      &.is-4-larger-gap {
        flex: 0 0 calc(25% - 2rem);
      }
      &.is-5-larger-gap {
        flex: 0 0 calc(20% - 2rem);
      }
      &.is-7-larger-gap {
        flex: 0 0 calc(14.2857% - 2rem);
      }
    }
  }
}
.align-left {
  .grid-columns .grid-column {
    span {
      justify-content: flex-start;
    }
    .content {
      align-items: flex-start;
    }
  }
}
.align-item-center {
  .grid-columns {
    align-items: center;
  }
}

/*
  <<<<<<<<<<<<<<<<GENERIC HELPER CLASSES>>>>>>>>>>>>>>>>>
*/
.semi-bold {
  font-weight: 600;
}
.bold {
  font-weight: bold;
}
.extra-bold {
  font-weight: 800;
}
.b-r-30px {
  border-radius: toRem(30);
  overflow: hidden;
}

.b-r-0 {
  border-radius: 0 !important;
}

.object-fit-fill img {
  object-fit: fill !important;
}

.object-fit-contain img {
  object-fit: contain !important;
}

.object-fit-cover {
  object-fit: cover !important;
}

.wrap {
  @include siteWidth();
  margin: 0 auto;
}

.card {
  padding: 0.9375rem 0.9375rem;
  border: 0.125rem solid $color-darkmedium;
  border-radius: 0.25rem;
}

.border-radius-1,
.border-radius-1 > span > img,
.border-radius-1 > div span img {
  border-radius: 1rem;
}
.border-radius-1-5,
.border-radius-1-5 > span > img,
.border-radius-1-5 > div span img {
  border-radius: 1.5rem;
}
.border-radius-2,
.border-radius-2 > span > img,
.border-radius-2 > div span img {
  border-radius: 2rem;
}

.align-center {
  text-align: center;
}
.align-left {
  text-align: left;
}
.align-right {
  text-align: right;
}
// class for forcing text-align: center
.text-align-center {
  text-align: center !important;
  * {
    text-align: center !important;
  }
}
// class for forcing text-align: left
.text-align-left {
  text-align: left !important;
  * {
    text-align: left !important;
  }
}
.border-gray {
  border: 0.125rem solid $color-gray;
}

.box-shadow {
  box-shadow: 0 0.0625rem 0.25rem rgb(0, 0, 0, 10%);
}

.card-shadow {
  @include shadow();
}

.float-left {
  float: left;
}

.float-right {
  float: right;
}
.clear-left {
  clear: left;
}

.is-hidden {
  visibility: hidden;
  height: 0;
}

.transparentized-navbar-transform {
  padding: 2rem 0 0 0 !important;
  @include desktop() {
    padding: unset !important;
    position: relative;
    padding-top: calc($navbar-height + $navbar-secondary-height) !important;
    top: 0 - $navbar-height - $navbar-secondary-height;
  }
}

.agility-image {
  width: 100%;
  height: auto;
  max-height: inherit;
  object-fit: contain;
}

/*
  <<<<<<<<<<<<<<<<DISPLAY HELPER CLASSES>>>>>>>>>>>>>>>>>
*/
.d-flex {
  display: flex;
}

.d-inline-block {
  display: inline-block;
}

.display-block {
  display: block;
}

.display-none {
  display: none !important;
}

/*
  <<<<<<<<<<<<<<<<SPACING HELPER CLASSES>>>>>>>>>>>>>>>>>
*/
.section {
  padding-top: 2rem;
  padding-bottom: 2rem;
  @include desktop() {
    padding-top: 3rem;
    padding-bottom: 3rem;
    .bg-radial-gradient-bottom {
      padding-bottom: 4.5rem;
    }
  }
}

.overflow-scroll {
  overflow-x: auto;
}

.container {
  @include siteWidth();
  margin: 0 auto;
  padding-left: 1rem;
  padding-right: 1rem;
  overflow-wrap: break-word;
}

.reduce-list-padding-mobile {
  @include mobile {
    ul {
      padding-left: 0;
      margin-left: 0;
      li {
        margin-left: 1.5rem;
      }
    }
  }
}

// !important used here because these classes are meant for overriding default values
// without !important these would not apply the changes every time
.mt-0 {
  margin-top: 0 !important;
}
.mt-1 {
  margin-top: $size-1 !important;
}
.mt-2 {
  margin-top: $size-2 !important;
}
.mt-3 {
  margin-top: $size-3 !important;
}
.mt-4 {
  margin-top: $size-4 !important;
}
.mt-5 {
  margin-top: $size-5 !important;
}
.mt-6 {
  margin-top: $size-6 !important;
}
.mt--5 {
  margin-top: 0 !important;
  @include desktop() {
    margin-top: -$size-6 !important;
  }
}
.mt--8 {
  margin-top: 0 !important;
  @include desktop() {
    margin-top: -8rem !important;
  }
}

.mt--navbar-height {
  margin-top: 0 !important;
  // helper class to fix the top offset when TransparentizeNavbar module is added to page
  @include desktop() {
    margin-top: calc(
      0rem - ($navbar-height + $navbar-secondary-height)
    ) !important;
  }
}

.mb-0 {
  margin-bottom: 0 !important;
}
.mb-1 {
  margin-bottom: $size-1 !important;
}
.mb-2 {
  margin-bottom: $size-2 !important;
}
.mb-3 {
  margin-bottom: $size-3 !important;
}
.mb-4 {
  margin-bottom: $size-4 !important;
}
.mb-5 {
  margin-bottom: $size-5 !important;
}
.mb-6 {
  margin-bottom: $size-6 !important;
}

.ml-0 {
  margin-left: 0 !important;
}
.ml-05 {
  margin-left: $size-05 !important;
}
.ml-1 {
  margin-left: $size-1 !important;
}
.ml-2 {
  margin-left: $size-2 !important;
}
.ml-3 {
  margin-left: $size-3 !important;
}
.ml-4 {
  margin-left: $size-4 !important;
}
.ml-5 {
  margin-left: $size-5 !important;
}
.ml-6 {
  margin-left: $size-6 !important;
}
.ml-auto {
  margin-left: auto !important;
}

.mr-05 {
  margin-right: $size-05 !important;
}
.mr-1 {
  margin-right: $size-1 !important;
}
.mr-2 {
  margin-right: $size-2 !important;
}
.mr-3 {
  margin-right: $size-3 !important;
}
.mr-4 {
  margin-right: $size-4 !important;
}
.mr-5 {
  margin-right: $size-5 !important;
}
.mr-6 {
  margin-right: $size-6 !important;
}
.mr-auto {
  margin-right: auto !important;
}

// reset these on mobile screen sizes
* {
  & [class*="ml-"] {
    @include mobile() {
      margin-left: unset !important;
    }
  }

  & [class*="mr-"] {
    @include mobile() {
      margin-right: unset !important;
    }
  }
}

// margin-block: selects both margin-top and margin-bottom
.margin-block-1 {
  margin-block: $size-1 !important;
  @supports not (margin-block: $size-1) {
    margin-top: $size-1 !important;
    margin-bottom: $size-1 !important;
  }
}
.margin-block-2 {
  margin-block: $size-2 !important;
  @supports not (margin-block: $size-2) {
    margin-top: $size-2 !important;
    margin-bottom: $size-2 !important;
  }
}
.margin-block-3 {
  margin-block: $size-3 !important;
  @supports not (margin-block: $size-3) {
    margin-top: $size-3 !important;
    margin-bottom: $size-3 !important;
  }
}
.margin-block-4 {
  margin-block: $size-4 !important;
  @supports not (margin-block: $size-4) {
    margin-top: $size-4 !important;
    margin-bottom: $size-4 !important;
  }
}
.margin-block-5 {
  margin-block: $size-5 !important;
  @supports not (margin-block: $size-5) {
    margin-top: $size-5 !important;
    margin-bottom: $size-5 !important;
  }
}
.margin-block-6 {
  margin-block: $size-6 !important;
  @supports not (margin-block: $size-6) {
    margin-top: $size-6 !important;
    margin-bottom: $size-6 !important;
  }
}

.margin-center-horizontal {
  margin: 0 auto !important;
}

.margin-unset {
  margin: unset !important;
}

.p-0 {
  padding: 0 !important;
}
.p-1 {
  padding: toRem(10);
}
.p-2 {
  padding: toRem(20);
}
.pt-0 {
  padding-top: 0 !important;
}
.pt-1px {
  padding-top: 1px !important;
}
.pt-1 {
  padding-top: $size-1 !important;
}
.pt-2 {
  padding-top: $size-2 !important;
}
.pt-3 {
  padding-top: $size-3 !important;
}
.pt-4 {
  padding-top: $size-4 !important;
}
.pt-5 {
  padding-top: $size-5 !important;
}
.pt-6 {
  padding-top: $size-6 !important;
}
.pb-0 {
  padding-bottom: 0 !important;
}
.pb-1 {
  padding-bottom: $size-1 !important;
}
.pb-2 {
  padding-bottom: $size-2 !important;
}
.pb-3 {
  padding-bottom: $size-3 !important;
}
.pb-4 {
  padding-bottom: $size-4 !important;
}
.pb-5 {
  padding-bottom: $size-5 !important;
}
.pb-6 {
  padding-bottom: $size-6 !important;
}
.pr-4 {
  padding-right: $size-4 !important;
}
.pl-2 {
  padding-left: $size-2 !important;
}
.pl-4 {
  padding-left: $size-4 !important;
}

// padding-block: selects both padding-top and padding-bottom
.padding-block-0 {
  padding-block: 0 !important;
  @supports not (padding-block: 0) {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
  }
}
.padding-block-1 {
  padding-block: $size-1 !important;
  @supports not (padding-block: $size-1) {
    padding-top: $size-1 !important;
    padding-bottom: $size-1 !important;
  }
}
.padding-block-2 {
  padding-block: $size-2 !important;
  @supports not (padding-block: $size-2) {
    padding-top: $size-2 !important;
    padding-bottom: $size-2 !important;
  }
}
.padding-block-3 {
  padding-block: $size-3 !important;
  @supports not (padding-block: $size-3) {
    padding-top: $size-3 !important;
    padding-bottom: $size-3 !important;
  }
}
.padding-block-4 {
  padding-block: $size-4 !important;
  @supports not (padding-block: $size-4) {
    padding-top: $size-4 !important;
    padding-bottom: $size-4 !important;
  }
}
.padding-block-5 {
  padding-block: $size-5 !important;
  @supports not (padding-block: $size-5) {
    padding-top: $size-5 !important;
    padding-bottom: $size-5 !important;
  }
}
.padding-block-6 {
  padding-block: $size-6 !important;
  @supports not (padding-block: $size-6) {
    padding-top: $size-6 !important;
    padding-bottom: $size-6 !important;
  }
}

.padding-unset {
  padding: unset !important;
}

/*
<<<<<<<<<<<<<<<<WIDTH HELPER CLASSES>>>>>>>>>>>>>>>>>
*/
.width-100 {
  width: 100%;
}
.max-width-very-narrow {
  max-width: $very-narrow;
}
.max-width-narrow {
  @include narrowWidth();
}
.max-width-brand {
  max-width: $brand;
}
.qmax-width-tablet {
  max-width: $tablet;
}
.max-width-medium {
  max-width: $medium;
}
.max-width-medium-wide {
  max-width: $medium-wide;
}
.max-width-wide {
  max-width: $wide;
}
.max-width-unset {
  max-width: unset;
}

/*
<<<<<<<<<<<<<<<<HEIGHT HELPER CLASSES>>>>>>>>>>>>>>>>>
*/

.max-height-size-6 {
  max-height: $size-6;
}

fieldset {
  border: 0;
}
/* GreenHouse Forms */
.content-intro {
  margin-bottom: 2rem;
}

.imgLink {
  &:hover img {
    opacity: 0.7;
    border-color: #92c0e5 !important;
  }
}

.progress {
  border-radius: 0.5rem;
  background-color: $color-white;
  border: 1px solid $color-gray;
  height: 1rem;
  width: 100%;
  position: relative;
  overflow: hidden;
  &--bar {
    background-color: $color-darkblue;
    height: 100%;
    left: 0;
    top: 0;
    width: 0%;
    transition: width 0.1s linear;
  }
}

// Moved color classes here

.bg-paleblue {
  background-color: #f0f6ff !important; // $color-paleblue: not pale enough...;
}
.bg-palelightblue {
  background-color: #e1ecfe !important;
}
.bg-skyblue-light {
  background-color: $color-paleblue;
}
.bg-lightblue {
  background-color: $color-lightblue !important;
}
.bg-mediumblue {
  background-color: $color-mediumblue !important;
}
.bg-skyblue {
  background-color: $color-skyblue !important;
}
.bg-darkblue {
  background-color: $color-darkblue !important;
}
.bg-navy {
  background-color: $color-navy !important;
}
.bg-orange {
  background-color: $color-orange !important;
}
.bg-black {
  background-color: $color-black !important;
}
.bg-white {
  background-color: $color-white !important;
}
.bg-gray {
  background-color: $color-gray !important;
}
.bg-darkgray {
  background-color: $color-darkgray !important;
}
.bg-darkmedium {
  background-color: $color-darkmedium !important;
}
.bg-lightmedium {
  background-color: $color-lightmedium !important;
}
.bg-mediumgray {
  background-color: $color-mediumgray !important;
}
.bg-lightgray {
  background-color: $color-lightgray !important;
}
.bg-red {
  background-color: $color-red !important;
}
.bg-green {
  background-color: $color-green !important;
}
.bg-darkpurple {
  background-color: $color-darkpurple !important;
}
.bg-lightpurple {
  background-color: $color-lightpurple !important;
}
.bg-mediumpurple {
  background-color: $color-mediumpurple !important;
}
.bg-gradient-blue {
  background: linear-gradient(
    90deg,
    $color-skyblue,
    $color-mediumblue
  ) !important;
}
.bg-gradient-blue-light {
  background-color: #e2eeff;
  @media (min-width: 55.625rem) {
    background: linear-gradient(90deg, #e2eeff, #fff 25%, #e2eeff 45%, #e2eeff);
  }
}
.bg-radial-gradient-top {
  position: relative;
  margin-top: 1.35rem;
  &::before {
    content: "";
    position: absolute;
    right: 0;
    left: 0;
    top: 0;
    height: 1.35rem;
    transform: translateY(-100%);
    background: radial-gradient(
      ellipse farthest-side at bottom center,
      rgba(0, 0, 0, 0.08),
      transparent
    );
  }
}
.bg-radial-gradient-bottom {
  position: relative;
  margin-bottom: 1.35rem;
  &::after {
    content: "";
    position: absolute;
    right: 0;
    left: 0;
    bottom: 0;
    height: 1.35rem;
    transform: translateY(100%);
    background: radial-gradient(
      ellipse farthest-side at top center,
      rgba(0, 0, 0, 0.08),
      transparent
    );
  }
}
.bg-radial-gradient {
  height: 1.35rem;
  background: radial-gradient(
    ellipse farthest-side at bottom center,
    rgba(0, 0, 0, 0.08),
    transparent
  );
  position: relative;
  margin-bottom: 1.35rem;
  &::after {
    content: "";
    position: absolute;
    right: 0;
    left: 0;
    bottom: 0;
    height: 1.35rem;
    transform: translateY(100%);
    background: radial-gradient(
      ellipse farthest-side at top center,
      rgba(0, 0, 0, 0.08),
      transparent
    );
  }
}

.filter-gray {
  filter: grayscale(1) opacity(0.5);
}

.text-paleblue {
  color: $color-paleblue;
}
.text-lightblue {
  color: $color-lightblue;
}
.text-mediumblue {
  color: $color-mediumblue;
}
.text-skyblue {
  color: $color-skyblue;
}
.text-darkblue {
  color: $color-darkblue;
}
.text-navy {
  color: $color-navy;
}
.text-orange {
  color: $color-orange;
}
.text-black {
  color: $color-black;
}
.text-white {
  color: $color-white;
}
.text-gray {
  color: $color-gray;
}
.text-darkgray {
  color: $color-darkgray;
}
.text-darkmedium {
  color: $color-darkmedium;
}
.text-mediumgray {
  color: $color-mediumgray;
}
.text-lightgray {
  color: $color-lightgray;
}
.text-red {
  color: $color-red;
}
.text-green {
  color: $color-green;
}
.text-purple {
  color: $color-purple;
}
.text-darkpurple {
  color: $color-darkpurple;
}
.text-lightpurple {
  color: $color-lightpurple;
}
.text-mediumpurple {
  color: $color-mediumpurple;
}

#q-frame-hidden {
  display: none;
}
